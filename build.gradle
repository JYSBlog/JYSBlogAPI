plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id 'org.sonarqube' version '4.2.1.3168'
}

sonar {
	properties {
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.organization', 'organizationKey'
		property 'sonar.projectKey', 'projectKey'
		property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
	}
}
jacocoTestReport {
	reports {
		xml.enabled true
	}
}

group = 'com.blog'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// util
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//docker
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	testAndDevelopmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	// database
//	runtimeOnly 'com.mysql:mysql-connector-j'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
}

jar {
	enabled = false
}

tasks.named('test') {
	useJUnitPlatform()
}
